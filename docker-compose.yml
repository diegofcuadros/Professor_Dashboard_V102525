# LIA Lab Management System - Single Lab Docker Compose
# Simplified for 10-15 member research lab
version: '3.8'

services:
  # Main Application (API + Background Jobs + Frontend)
  app:
    build: 
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=development
      - PORT=5000
      - DATABASE_URL=postgresql://lia_user:lia_password@postgres:5432/lia_lab
      - REDIS_URL=redis://:lia_redis_password@redis:6379
      - SESSION_SECRET=lia-lab-secret-change-in-production
      - OLLAMA_HOST=http://ollama:11434
      - SMTP_HOST=maildev
      - SMTP_PORT=1025
    volumes:
      - ./:/app
      - node_modules:/app/node_modules
      - ./uploads:/app/uploads
      - ./reports:/app/reports
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    command: npm run dev

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=lia_lab
      - POSTGRES_USER=lia_user
      - POSTGRES_PASSWORD=lia_password
      - POSTGRES_INITDB_ARGS=--auth-host=scram-sha-256
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init:/docker-entrypoint-initdb.d
      - ./backups:/backups
    ports:
      - "5432:5432"  # Exposed for development access
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lia_user -d lia_lab"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  # Redis (Session Store + Job Queue + Cache)
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes --requirepass lia_redis_password
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"  # Exposed for development access
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "lia_redis_password", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    restart: unless-stopped

  # Ollama for Local AI (Llama 3.1)
  ollama:
    image: ollama/ollama:latest
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    environment:
      - OLLAMA_HOST=0.0.0.0
    restart: unless-stopped
    # Optional GPU support - uncomment if you have NVIDIA GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # MailDev for Email Testing (Development)
  maildev:
    image: maildev/maildev
    ports:
      - "1025:1025"  # SMTP
      - "1080:1080"  # Web UI
    environment:
      - MAILDEV_SMTP_PORT=1025
      - MAILDEV_WEB_PORT=1080
    restart: unless-stopped

  # Background Job Worker (runs in same container as app in dev mode)
  # In production, this would be a separate container
  # worker:
  #   build: 
  #     context: .
  #     dockerfile: Dockerfile.worker
  #   environment:
  #     - NODE_ENV=production
  #     - DATABASE_URL=postgresql://lia_user:lia_password@postgres:5432/lia_lab
  #     - REDIS_URL=redis://:lia_redis_password@redis:6379
  #     - OLLAMA_HOST=http://ollama:11434
  #   depends_on:
  #     - postgres
  #     - redis
  #     - ollama
  #   restart: unless-stopped
  #   command: npm run worker

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  ollama_data:
    driver: local
  node_modules:
    driver: local

networks:
  default:
    name: lia_lab_network